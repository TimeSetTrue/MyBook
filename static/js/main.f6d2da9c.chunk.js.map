{"version":3,"sources":["components/app-header/app-header.js","components/app-header/index.js","components/search-panel/search-panel.js","components/search-panel/index.js","components/post-status-filter/post-status-filter.js","components/post-status-filter/index.js","components/post-list-item/post-list-item.js","components/post-list-item/index.js","components/post-list/post-list.js","components/post-list/index.js","components/post-add-form/post-add-form.js","components/post-add-form/index.js","components/app/index.js","components/app/app.js","reportWebVitals.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","updateSearch","e","term","target","value","setState","state","type","placeholder","onChange","this","Component","PostStatusFilter","btn","name","label","map","onClick","onFilterSelect","PostListItem","onDelete","onToggleLike","onToggleImportant","classNames","important","like","PostList","posts","elements","item","id","itemProps","PostAddForm","text","onValueChange","bind","onSubmit","preventDefault","onAdd","App","likedPosts","items","filter","searchPost","length","indexOf","data","deleteItem","addItem","max","index","findIndex","elem","slice","body","replace","newItem","old","visiblePosts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6d2da9c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return(\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Andrey Altusov</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import AppHeader from './app-header';\r\nimport './app-header.css';\r\n    \r\nexport default AppHeader;","import React, {Component} from 'react';\r\n\r\nclass SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        \r\n    }\r\n\r\n    updateSearch = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.updateSearch(term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.updateSearch}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPanel;","import SearchPanel from './search-panel';\r\nimport './search-panel.css';\r\n\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\n\r\nclass PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.btn = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'},\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        const btn = this.btn.map(({name, label}) => {\r\n            return (\r\n                <button \r\n                    key={name} \r\n                    type=\"button\" \r\n                    className=\"btn btn-info\" \r\n                    onClick={() => this.props.onFilterSelect(name)}>{label}</button>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <div className=\"btn-group\">\r\n                {btn}\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default PostStatusFilter;","import PostStatusFilter from './post-status-filter';\r\nimport './post-status-filter.css';\r\n\r\nexport default PostStatusFilter;","import React, {Component} from 'react';\r\n\r\nexport default class PostListItem extends Component {\r\n    \r\n    render() {\r\n        const {label, onDelete, onToggleLike, onToggleImportant, important, like} = this.props;\r\n        let classNames = \"app-list-item d-flex justify-content-between\";\r\n\r\n        if(important) {\r\n            classNames += \" important\";\r\n        }\r\n\r\n        if(like) {\r\n            classNames += \" like\";\r\n        }\r\n\r\n        return(\r\n            <div className={classNames}>\r\n                <span\r\n                className=\"app-list-item-label\" onClick={onToggleLike}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <button type=\"button\" className=\"btn-star btn-sm\">\r\n                        <i className=\"bi-star\" onClick={onToggleImportant}></i>\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn-trash btn-sm\">\r\n                        <i className=\"bi-trash\" onClick={onDelete}></i>\r\n                    </button>\r\n                    <i className=\"bi-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import PostListItem from './post-list-item';\r\nimport './post-list-item.css';\r\n\r\nexport default PostListItem;","import React from 'react';\r\n\r\nimport PostListItem from '../post-list-item';\r\n\r\nconst PostList = ({posts, onDelete, onToggleLike, onToggleImportant}) => {\r\n\r\n    const elements = posts.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        \r\n        return(\r\n            <li key={id} className=\"list-group-item\">\r\n                <PostListItem\r\n                onDelete={() => onDelete(id)} {...itemProps}\r\n                onToggleLike={() => onToggleLike(id)}\r\n                onToggleImportant={() => onToggleImportant(id)}\r\n                />\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return(\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import PostList from './post-list';\r\nimport './post-list.css';\r\n\r\nexport default PostList;","import React, {Component} from 'react';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: '',\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(e) {\r\n       \r\n        this.setState({\r\n            text: e.target.value,\r\n        });\r\n\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: '',\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form \r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"О чем вы думаете сейчас?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btm-outline-secondary\">\r\n                    Добавить\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import PostAddForm from './post-add-form';\r\nimport './post-add-form.css';\r\n\r\nexport default PostAddForm;","import App from './app';\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header/';\r\nimport SearchPanel from '../search-panel/';\r\nimport PostStatusFilter from '../post-status-filter/';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\nimport './app.css';\r\n\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                {label: \"Всем привт\", important: false, like: false, id: \"qwe\"},\r\n                {label: \"Hellow\", important: true, like: false, id: \"trt\"},\r\n                {label: \"I need help\", important: false, like: false, id: \"fgg\"},\r\n            ],\r\n            filter: 'all',\r\n            term: '',\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLike = this.onToggleLike.bind(this);\r\n\r\n        \r\n        this.max = 4;\r\n        \r\n        \r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem. id === id);\r\n\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\r\n            return{\r\n                data: newArr,\r\n            };\r\n        });\r\n    }\r\n\r\n    addItem(body) {\r\n        if(body.replace(/\\s/g, '')) {\r\n            const newItem = {\r\n                label: body,\r\n                important: false,\r\n                id: this.max++,\r\n            };\r\n            \r\n            this.setState(({data}) => {\r\n                const newArr = [...data, newItem];\r\n                return {\r\n                    data: newArr,\r\n                }\r\n    \r\n            });\r\n        }\r\n    } \r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return{\r\n                data: newArr,\r\n            };\r\n\r\n        });\r\n    }\r\n\r\n    onToggleLike(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return{\r\n                data: newArr,\r\n            };\r\n\r\n        });\r\n    }\r\n\r\n    likedPosts = (items, filter) => {\r\n        if( filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onFilterSelect = (filter) => {\r\n        this.setState({filter})\r\n    }\r\n\r\n    searchPost = (items, term) => {\r\n        if(term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter(item => {\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    }\r\n\r\n    updateSearch = (term) => {\r\n        this.setState({term});\r\n    }\r\n\r\n    render() {\r\n        const {data, filter, term} = this.state;\r\n\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visiblePosts = this.likedPosts(this.searchPost(data, term), filter)\r\n        return(\r\n            <div className=\"app\">\r\n                <AppHeader\r\n                    liked={liked}\r\n                    allPosts={allPosts}\r\n                />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel updateSearch={this.updateSearch}/>\r\n                    <PostStatusFilter \r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect} />\r\n                </div> \r\n                <PostList \r\n                    posts={visiblePosts} \r\n                    onDelete={this.deleteItem} \r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLike={this.onToggleLike}\r\n                />\r\n                <PostAddForm\r\n                    onAdd={this.addItem}\r\n                />\r\n            </div>\r\n        )     \r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}